====================
1. Divide a matrix module:
====================
import module:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Function:
=======.
Write a function that divides all elements of a matrix.

Operations:
=========
>>> matrix_divided([[1, 2], [3, 4]], 1)
[[1.0, 2.0], [3.0, 4.0]]

>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[0, 0], [0, 0]], 'Pi')
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2], [3, 4], [5]], 1)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[0, 0], [0, 0]], float('NaN'))
[[nan, nan], [nan, nan]]

>>> matrix_divided([[1, 2], 'PI'], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[0, 1], [2, 'PI']], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1], [1]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'